[2022-6-18 7:54:43] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 7:54:43] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 7:54:43] [INFO] Booting the 'Views' middleware...
[2022-6-18 7:54:43] [INFO] Booting the 'Statics' middleware...
[2022-6-18 7:54:43] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 7:56:19] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 7:56:19] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 7:56:19] [INFO] Booting the 'Views' middleware...
[2022-6-18 7:56:19] [INFO] Booting the 'Statics' middleware...
[2022-6-18 7:56:19] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 7:56:31] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 7:56:31] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 7:56:31] [INFO] Booting the 'Views' middleware...
[2022-6-18 7:56:31] [INFO] Booting the 'Statics' middleware...
[2022-6-18 7:56:31] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 7:56:39] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 7:56:39] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 7:56:39] [INFO] Booting the 'Views' middleware...
[2022-6-18 7:56:39] [INFO] Booting the 'Statics' middleware...
[2022-6-18 7:56:39] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 7:58:51] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:58:51] [INFO] New user logged existingadmin@test.com
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:58:51] [INFO] New user logged existingadmin@test.com
[2022-6-18 7:58:51] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:58:51] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:58:54] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:58:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:58:54] [INFO] New user logged existingadmin@test.com
[2022-6-18 7:59:33] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:59:33] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:59:33] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:59:33] [INFO] New user logged existingadmin@test.com
[2022-6-18 7:59:33] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:59:33] [INFO] New user logged existingadmin@test.com
[2022-6-18 7:59:34] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:59:34] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:59:34] [INFO] New user logged existingadmin@test.com
[2022-6-18 7:59:34] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 7:59:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 7:59:35] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:1:13] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:1:13] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:1:13] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:1:13] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:1:13] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:2:45] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:2:45] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:2:45] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:2:45] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:2:45] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:2:55] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:2:55] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:2:55] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:2:55] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:2:55] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:2:55] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:2:55] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:2:55] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:2:57] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:11:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:11:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:11:22] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:11:22] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:11:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:11:32] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:11:32] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:11:32] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:11:32] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:11:32] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:48:11] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:48:11] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:48:11] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:48:11] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:48:11] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:48:11] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:48:11] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:48:11] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:48:11] [INFO] Email is existingadmin@test.com
[2022-6-18 8:48:11] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 8:48:11] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 8:48:11] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:48:11] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 8:48:11] [INFO] comparing password now!
[2022-6-18 8:48:11] [INFO] Here in the login controller #2!
[2022-6-18 8:48:11] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-18 8:48:11] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:49:38] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:49:38] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:49:38] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:49:38] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:49:38] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:50:0] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:50:0] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:50:0] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:50:0] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:50:0] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:50:5] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:50:6] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:50:5] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:50:6] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:50:6] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:50:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:50:6] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:50:6] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:9] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:52:9] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:52:9] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:52:9] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:52:9] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:52:17] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:52:17] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:52:17] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:52:17] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:52:17] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:52:29] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:52:28] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:52:29] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:52:28] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:52:28] [INFO] New user logged existingadmin@test.com
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 8:52:29] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 8:54:1] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:54:1] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:54:1] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:54:1] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:54:1] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 8:54:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 8:54:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 8:54:22] [INFO] Booting the 'Views' middleware...
[2022-6-18 8:54:22] [INFO] Booting the 'Statics' middleware...
[2022-6-18 8:54:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:2:58] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:2:58] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:2:58] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:2:58] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:2:58] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:4:17] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:4:17] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:4:17] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:4:17] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:4:17] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:6:2] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:6:2] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:6:2] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:6:2] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:6:2] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:7:7] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:7:7] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:7:7] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:7:7] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:7:7] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:24:11] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:24:11] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:24:11] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:24:11] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:24:11] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:32:7] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:32:7] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:32:7] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:32:7] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:32:7] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:39:40] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:39:40] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:39:40] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:39:40] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:39:40] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:39:45] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:39:45] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:39:45] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:39:45] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:39:45] [INFO] Email is existingadmin@test.com
[2022-6-18 9:39:45] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:39:45] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:39:45] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:39:45] [INFO] comparing password now!
[2022-6-18 9:39:45] [INFO] Here in the login controller #2!
[2022-6-18 9:40:20] [INFO] Booting the 'HTTP' middleware...
[2022-6-18 9:40:20] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-18 9:40:20] [INFO] Booting the 'Views' middleware...
[2022-6-18 9:40:20] [INFO] Booting the 'Statics' middleware...
[2022-6-18 9:40:20] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-18 9:40:36] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:40:36] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:40:36] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:40:36] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:40:36] [INFO] Email is existingadmin@test.com
[2022-6-18 9:40:36] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:40:36] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:40:36] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:40:36] [INFO] comparing password now!
[2022-6-18 9:40:36] [INFO] Here in the login controller #2!
[2022-6-18 9:42:12] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:42:12] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:42:12] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:42:12] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:42:12] [INFO] Email is existingadmin@test.com
[2022-6-18 9:42:12] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:42:12] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:42:12] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:42:12] [INFO] comparing password now!
[2022-6-18 9:42:12] [INFO] Here in the login controller #2!
[2022-6-18 9:46:14] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:46:14] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:46:14] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:46:14] [INFO] Email is existingadmin@test.com
[2022-6-18 9:46:14] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:46:14] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:46:14] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:46:14] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:46:14] [INFO] Here in the login controller #2!
[2022-6-18 9:46:14] [INFO] comparing password now!
[2022-6-18 9:46:51] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:46:51] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:46:51] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:46:51] [INFO] Email is existingadmin@test.com
[2022-6-18 9:46:51] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:46:51] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:46:51] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:46:51] [INFO] comparing password now!
[2022-6-18 9:46:51] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:46:51] [INFO] Here in the login controller #2!
[2022-6-18 9:47:21] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:47:21] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:47:21] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:21] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:47:21] [INFO] Email is existingadmin@test.com
[2022-6-18 9:47:21] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:47:21] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:47:21] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:21] [INFO] comparing password now!
[2022-6-18 9:47:21] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:47:21] [INFO] Here in the login controller #2!
[2022-6-18 9:47:21] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:21] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:47:21] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:47:21] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:47:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:24] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:47:24] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:24] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:47:24] [INFO] Email is existingadmin@test.com
[2022-6-18 9:47:24] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:47:24] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:47:24] [INFO] comparing password now!
[2022-6-18 9:47:24] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:47:24] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:47:24] [INFO] Here in the login controller #2!
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:48:35] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:35] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:35] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:48:35] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:48:35] [INFO] Email is existingadmin@test.com
[2022-6-18 9:48:35] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:48:35] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:35] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:48:35] [INFO] comparing password now!
[2022-6-18 9:48:35] [INFO] Here in the login controller #2!
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:34] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:48:34] [INFO] Email is existingadmin@test.com
[2022-6-18 9:48:34] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:48:34] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:34] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:48:34] [INFO] comparing password now!
[2022-6-18 9:48:34] [INFO] Here in the login controller #2!
[2022-6-18 9:48:34] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:48:34] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:48:37] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:48:37] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:37] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:48:37] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:48:37] [INFO] Email is existingadmin@test.com
[2022-6-18 9:48:37] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:48:37] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:48:37] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:48:37] [INFO] comparing password now!
[2022-6-18 9:48:37] [INFO] Here in the login controller #2!
[2022-6-18 9:52:54] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:54] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:52:54] [INFO] Email is existingadmin@test.com
[2022-6-18 9:52:54] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:52:54] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:54] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:52:54] [INFO] comparing password now!
[2022-6-18 9:52:54] [INFO] Here in the login controller #2!
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:52:55] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:54] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:52:55] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:55] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:52:55] [INFO] Email is existingadmin@test.com
[2022-6-18 9:52:55] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:52:55] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:52:55] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:55] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:52:55] [INFO] comparing password now!
[2022-6-18 9:52:55] [INFO] Here in the login controller #2!
[2022-6-18 9:52:55] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:52:55] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:52:57] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:52:57] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:57] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:52:57] [INFO] Email is existingadmin@test.com
[2022-6-18 9:52:57] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:52:57] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:52:57] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:52:57] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:52:57] [INFO] comparing password now!
[2022-6-18 9:52:57] [INFO] Here in the login controller #2!
[2022-6-18 9:55:1] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:55:1] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:55:1] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:1] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:55:1] [INFO] Email is existingadmin@test.com
[2022-6-18 9:55:1] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:55:1] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:55:1] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:1] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:55:1] [INFO] comparing password now!
[2022-6-18 9:55:1] [INFO] Here in the login controller #2!
[2022-6-18 9:55:1] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:1] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:55:1] [INFO] Email is existingadmin@test.com
[2022-6-18 9:55:1] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:55:1] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:55:1] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:1] [INFO] comparing password now!
[2022-6-18 9:55:1] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:55:1] [INFO] Here in the login controller #2!
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:55:1] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:55:1] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:55:2] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:55:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:4] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:55:4] [INFO] Email is existingadmin@test.com
[2022-6-18 9:55:4] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:55:4] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:55:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:55:4] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:55:4] [INFO] comparing password now!
[2022-6-18 9:55:4] [INFO] Here in the login controller #2!
[2022-6-18 9:57:48] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:57:48] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:57:48] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:57:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:48] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:57:48] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:57:48] [INFO] Email is existingadmin@test.com
[2022-6-18 9:57:48] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:57:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:48] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:57:48] [INFO] comparing password now!
[2022-6-18 9:57:48] [INFO] Here in the login controller #2!
[2022-6-18 9:57:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:48] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:57:48] [INFO] Email is existingadmin@test.com
[2022-6-18 9:57:48] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:57:48] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:57:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:48] [INFO] New user logged existingadmin@test.com
[2022-6-18 9:57:48] [INFO] Email is existingadmin@test.com
[2022-6-18 9:57:48] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-18 9:57:48] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-18 9:57:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:48] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:57:48] [INFO] comparing password now!
[2022-6-18 9:57:48] [INFO] Here in the login controller #2!
[2022-6-18 9:57:48] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-18 9:57:48] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:57:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:48] [INFO] user is existingadmin@test.com                                                                              
[2022-6-18 9:57:48] [INFO] comparing password now!
[2022-6-18 9:57:48] [INFO] Here in the login controller #2!
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 1
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 0
[2022-6-18 9:57:50] [INFO] sqlToDB(): SELECT | 1
