[2022-6-12 7:17:4] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:17:4] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:17:4] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:17:4] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:17:4] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:17:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 7:17:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 7:17:4] [INFO] New user logged existingadmin@test.com
[2022-6-12 7:18:38] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:18:38] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:18:38] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:18:38] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:18:38] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:19:20] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:19:20] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:19:20] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:19:20] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:19:20] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:19:28] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:19:28] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:19:28] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:19:28] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:19:28] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:38:21] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:38:21] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:38:21] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:38:21] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:38:21] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:38:49] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:38:49] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:38:49] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:38:49] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:38:49] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:39:4] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:39:4] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:39:4] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:39:4] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:39:4] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:39:19] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:39:19] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:39:19] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:39:19] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:39:19] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:39:39] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:39:39] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:39:39] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:39:39] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:39:39] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:42:33] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:42:33] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:42:33] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:42:33] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:42:33] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:42:43] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:42:43] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:42:43] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:42:43] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:42:43] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:43:42] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:43:42] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:43:42] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:43:42] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:43:42] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:56:33] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:56:33] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:56:33] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:56:33] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:56:33] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 7:56:33] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 7:56:33] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 7:56:33] [INFO] New user logged existingadmin@test.com
[2022-6-12 7:56:33] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 7:56:33] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 7:56:33] [INFO] New user logged existingadmin@test.com
[2022-6-12 7:57:24] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 7:57:24] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 7:57:24] [INFO] Booting the 'Views' middleware...
[2022-6-12 7:57:24] [INFO] Booting the 'Statics' middleware...
[2022-6-12 7:57:24] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:8:40] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:8:40] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:8:40] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:8:40] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:8:40] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:8:52] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:8:52] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:8:52] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:8:52] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:8:52] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:9:26] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:9:26] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:9:26] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:9:26] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:9:26] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:9:26] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:9:26] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:9:26] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:9:26] [ERROR] Internal Server Error TypeError: Cannot read properties of undefined (reading 'authenticate')
[2022-6-12 8:9:26] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:9:26] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:9:26] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:9:26] [ERROR] Internal Server Error TypeError: Cannot read properties of undefined (reading 'authenticate')
[2022-6-12 8:10:13] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:10:13] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:10:13] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:10:13] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:10:13] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:10:13] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:10:13] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:10:13] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:33:18] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:33:18] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:33:18] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:33:18] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:33:18] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:33:53] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:33:53] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:33:53] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:33:53] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:33:53] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:34:0] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:34:0] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:34:0] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:34:0] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:34:0] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:34:32] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:34:32] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:34:32] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:34:32] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:34:32] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:37:47] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:37:47] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:37:47] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:37:47] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:37:47] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:37:53] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:37:53] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:37:53] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:37:53] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:37:53] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:45:1] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:45:1] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:45:1] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:45:1] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:45:1] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:45:20] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:45:20] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:45:20] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:45:20] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:45:20] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:46:55] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:46:55] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:46:55] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:46:55] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:46:55] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:49:16] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:49:16] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:49:16] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:49:16] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:49:16] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:49:16] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:49:16] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:49:16] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:49:16] [INFO] Here in the login controller #2!
[2022-6-12 8:49:41] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:49:41] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:49:41] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:49:41] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:49:41] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:49:41] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:49:41] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:49:41] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:49:41] [INFO] Here in the login controller #2!
[2022-6-12 8:50:12] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:50:12] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:50:12] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:50:12] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:50:12] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:50:12] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:50:12] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:50:12] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:51:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:51:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:51:22] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:51:22] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:51:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:51:22] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:51:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:51:22] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:51:22] [INFO] Here in the login controller #2!
[2022-6-12 8:52:3] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:52:3] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:52:3] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:52:3] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:52:3] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:52:10] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:52:10] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:52:10] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:52:10] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:52:10] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:52:10] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:52:10] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:52:10] [INFO] Here in the login controller #2!
[2022-6-12 8:52:10] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:52:30] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:52:30] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:52:30] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:52:30] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:52:30] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:52:39] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:52:39] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:52:39] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:52:39] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:52:39] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:52:39] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:52:39] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:52:39] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:52:39] [INFO] Here in the login controller #2!
[2022-6-12 8:53:51] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:53:51] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:53:51] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:53:51] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:53:51] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:54:0] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:54:0] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:54:0] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:54:0] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:54:0] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:54:0] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:54:0] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:54:0] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:54:0] [INFO] Here in the login controller #2!
[2022-6-12 8:54:23] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:54:23] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:54:23] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:54:23] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:54:23] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:54:23] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:54:23] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:54:23] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:54:23] [INFO] Here in the login controller #2!
[2022-6-12 8:59:46] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 8:59:46] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 8:59:46] [INFO] Booting the 'Views' middleware...
[2022-6-12 8:59:46] [INFO] Booting the 'Statics' middleware...
[2022-6-12 8:59:46] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 8:59:46] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 8:59:46] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 8:59:46] [INFO] New user logged existingadmin@test.com
[2022-6-12 8:59:46] [INFO] Here in the login controller #2!
[2022-6-12 9:4:8] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:4:8] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:4:8] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:4:8] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:4:8] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:4:8] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:4:8] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:4:8] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:4:8] [INFO] Here in the login controller #2!
[2022-6-12 9:5:31] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:5:31] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:5:31] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:5:31] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:5:31] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:5:31] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:5:31] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:5:31] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:5:31] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:5:31] [INFO] Email is existingadmin@test.com
[2022-6-12 9:5:31] [INFO] Password is admin2807
[2022-6-12 9:5:31] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:5:31] [INFO] comparing password now!
[2022-6-12 9:5:31] [INFO] Here in the login controller #2!
[2022-6-12 9:5:31] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:6:45] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:6:45] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:6:45] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:6:45] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:6:45] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:6:53] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:6:53] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:6:53] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:6:53] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:6:53] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:6:53] [INFO] Email is existingadmin@test.com
[2022-6-12 9:6:53] [INFO] Password is admin2807
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] comparing password now!
[2022-6-12 9:6:53] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:6:53] [INFO] Here in the login controller #2!
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:6:53] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:6:53] [INFO] Password is admin2807
[2022-6-12 9:6:53] [INFO] Email is existingadmin@test.com
[2022-6-12 9:6:53] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] Here in the login controller #2!
[2022-6-12 9:6:53] [INFO] comparing password now!
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:6:53] [INFO] Email is existingadmin@test.com
[2022-6-12 9:6:53] [INFO] Password is admin2807
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:6:53] [INFO] comparing password now!
[2022-6-12 9:6:53] [INFO] Here in the login controller #2!
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:6:53] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:6:53] [INFO] Password is admin2807
[2022-6-12 9:6:53] [INFO] Email is existingadmin@test.com
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:6:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:6:53] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:6:53] [INFO] comparing password now!
[2022-6-12 9:6:53] [INFO] Here in the login controller #2!
[2022-6-12 9:38:4] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:38:4] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:38:4] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:38:4] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:38:4] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:38:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:38:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:38:4] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:38:4] [INFO] Email is existingadmin@test.com
[2022-6-12 9:38:4] [INFO] Password is admin2807
[2022-6-12 9:38:4] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:38:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:38:4] [INFO] comparing password now!
[2022-6-12 9:38:4] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:38:4] [INFO] Here in the login controller #2!
[2022-6-12 9:38:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:38:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:38:4] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:38:4] [INFO] Email is existingadmin@test.com
[2022-6-12 9:38:4] [INFO] Password is admin2807
[2022-6-12 9:38:4] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:38:4] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:38:4] [INFO] Here in the login controller #2!
[2022-6-12 9:38:4] [INFO] comparing password now!
[2022-6-12 9:38:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:40:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:40:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:40:22] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:40:22] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:40:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:40:22] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:40:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:40:22] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:40:22] [INFO] Email is existingadmin@test.com
[2022-6-12 9:40:22] [INFO] Password is admin2807
[2022-6-12 9:40:22] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:40:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:40:22] [INFO] comparing password now!
[2022-6-12 9:40:22] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:40:22] [INFO] Here in the login controller #2!
[2022-6-12 9:40:50] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:40:50] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:40:50] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:40:50] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:40:50] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:40:50] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:40:50] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:40:50] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:40:50] [INFO] Email is existingadmin@test.com
[2022-6-12 9:40:50] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:40:50] [INFO] Password is admin2807
[2022-6-12 9:40:50] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:40:50] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:40:50] [INFO] comparing password now!
[2022-6-12 9:40:50] [INFO] Here in the login controller #2!
[2022-6-12 9:48:14] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:48:14] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:48:14] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:48:14] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:48:14] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:48:14] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:48:14] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:48:14] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:48:14] [INFO] Email is existingadmin@test.com
[2022-6-12 9:48:14] [INFO] Password is admin2807
[2022-6-12 9:48:14] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:48:14] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:48:14] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:48:14] [INFO] comparing password now!
[2022-6-12 9:48:14] [INFO] Here in the login controller #2!
[2022-6-12 9:48:14] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:48:14] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:48:14] [INFO] Password is admin2807
[2022-6-12 9:48:14] [INFO] Email is existingadmin@test.com
[2022-6-12 9:48:14] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:48:14] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:48:14] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:48:14] [INFO] Here in the login controller #2!
[2022-6-12 9:48:14] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:48:14] [INFO] comparing password now!
[2022-6-12 9:48:59] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:48:59] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:48:59] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:48:59] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:48:59] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:48:59] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:48:59] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:48:59] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:48:59] [INFO] Email is existingadmin@test.com
[2022-6-12 9:48:59] [INFO] Password is admin2807
[2022-6-12 9:48:59] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:48:59] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:48:59] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:48:59] [INFO] comparing password now!
[2022-6-12 9:48:59] [INFO] Here in the login controller #2!
[2022-6-12 9:50:53] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:50:53] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:50:53] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:50:53] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:50:53] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:50:53] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:50:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:50:53] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:50:53] [INFO] Email is existingadmin@test.com
[2022-6-12 9:50:53] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 9:50:53] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:50:53] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:50:53] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:50:53] [INFO] comparing password now!
[2022-6-12 9:50:53] [INFO] Here in the login controller #2!
[2022-6-12 9:52:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:52:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:52:22] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:52:22] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:52:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:52:22] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:52:22] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:52:22] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 9:52:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:52:22] [INFO] Email is existingadmin@test.com
[2022-6-12 9:52:22] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:52:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:52:22] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:52:22] [INFO] comparing password now!
[2022-6-12 9:52:22] [INFO] Here in the login controller #2!
[2022-6-12 9:53:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:53:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:53:22] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:53:22] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:53:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:53:54] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:53:54] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:53:54] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:53:54] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:53:54] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:53:54] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:53:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:53:54] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:53:54] [INFO] Email is existingadmin@test.com
[2022-6-12 9:53:54] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 9:53:54] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:53:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:53:54] [INFO] comparing password now!
[2022-6-12 9:53:54] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:53:54] [INFO] Here in the login controller #2!
[2022-6-12 9:54:17] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:54:17] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:54:17] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:54:17] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:54:17] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:54:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 9:54:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 9:54:22] [INFO] Booting the 'Views' middleware...
[2022-6-12 9:54:22] [INFO] Booting the 'Statics' middleware...
[2022-6-12 9:54:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:54:22] [INFO] Email is existingadmin@test.com
[2022-6-12 9:54:22] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:54:22] [INFO] comparing password now!
[2022-6-12 9:54:22] [INFO] Here in the login controller #2!
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] Email is existingadmin@test.com
[2022-6-12 9:54:22] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:54:22] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 9:54:22] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:54:22] [INFO] comparing password now!
[2022-6-12 9:54:22] [INFO] Here in the login controller #2!
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:54:22] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 9:54:22] [INFO] Email is existingadmin@test.com
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] Here in the login controller #2!
[2022-6-12 9:54:22] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:54:22] [INFO] comparing password now!
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] New user logged existingadmin@test.com
[2022-6-12 9:54:22] [INFO] Email is existingadmin@test.com
[2022-6-12 9:54:22] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 9:54:22] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 9:54:22] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 9:54:22] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 9:54:22] [INFO] Here in the login controller #2!
[2022-6-12 9:54:22] [INFO] comparing password now!
[2022-6-12 10:22:27] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 10:22:27] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 10:22:27] [INFO] Booting the 'Views' middleware...
[2022-6-12 10:22:27] [INFO] Booting the 'Statics' middleware...
[2022-6-12 10:22:27] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 10:22:27] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 10:22:27] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 10:22:27] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 10:22:27] [INFO] New user logged existingadmin@test.com
[2022-6-12 10:22:27] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 10:22:27] [INFO] Email is existingadmin@test.com
[2022-6-12 10:22:27] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 10:22:27] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 10:22:27] [INFO] Here in the login controller #2!
[2022-6-12 10:22:27] [INFO] comparing password now!
[2022-6-12 10:23:51] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 10:23:51] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 10:23:51] [INFO] Booting the 'Views' middleware...
[2022-6-12 10:23:51] [INFO] Booting the 'Statics' middleware...
[2022-6-12 10:23:51] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 10:25:59] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 10:25:59] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 10:25:59] [INFO] Booting the 'Views' middleware...
[2022-6-12 10:25:59] [INFO] Booting the 'Statics' middleware...
[2022-6-12 10:25:59] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 10:26:31] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 10:26:31] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 10:26:31] [INFO] Booting the 'Views' middleware...
[2022-6-12 10:26:31] [INFO] Booting the 'Statics' middleware...
[2022-6-12 10:26:31] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 10:26:57] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 10:26:57] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 10:26:57] [INFO] Booting the 'Views' middleware...
[2022-6-12 10:26:57] [INFO] Booting the 'Statics' middleware...
[2022-6-12 10:26:57] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:1:49] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:1:49] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:1:49] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:1:49] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:1:49] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:1:49] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:1:49] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:1:49] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:1:49] [INFO] Email is existingadmin@test.com
[2022-6-12 11:1:49] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:1:49] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:1:49] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:1:49] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:1:49] [INFO] comparing password now!
[2022-6-12 11:1:49] [INFO] Here in the login controller #2!
[2022-6-12 11:10:5] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:10:5] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:10:5] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:10:5] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:10:5] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:10:5] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:10:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:10:5] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:10:5] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:10:5] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:10:5] [INFO] Email is existingadmin@test.com
[2022-6-12 11:10:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:10:5] [INFO] comparing password now!
[2022-6-12 11:10:5] [INFO] Here in the login controller #2!
[2022-6-12 11:10:5] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:10:5] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:10:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:10:5] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:10:5] [INFO] Email is existingadmin@test.com
[2022-6-12 11:10:5] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:10:5] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:10:5] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:10:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:10:5] [INFO] comparing password now!
[2022-6-12 11:10:5] [INFO] Here in the login controller #2!
[2022-6-12 11:10:5] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:10:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:10:5] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:10:5] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:10:5] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:10:5] [INFO] Email is existingadmin@test.com
[2022-6-12 11:10:5] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:10:5] [INFO] comparing password now!
[2022-6-12 11:10:5] [INFO] Here in the login controller #2!
[2022-6-12 11:10:5] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:16:2] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:16:2] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:16:2] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:16:2] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:16:2] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:16:2] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:16:2] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:16:2] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:16:2] [INFO] Email is existingadmin@test.com
[2022-6-12 11:16:2] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:16:2] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:16:2] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:16:2] [INFO] Here in the login controller #2!
[2022-6-12 11:16:2] [INFO] comparing password now!
[2022-6-12 11:16:2] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:16:44] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:16:44] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:16:44] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:16:44] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:16:44] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:16:44] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:16:44] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:16:44] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:16:44] [INFO] Email is existingadmin@test.com
[2022-6-12 11:16:44] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:16:44] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:16:44] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:16:44] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:16:44] [INFO] comparing password now!
[2022-6-12 11:16:44] [INFO] Here in the login controller #2!
[2022-6-12 11:23:50] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:23:50] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:23:50] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:23:50] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:23:50] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:38:12] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:38:12] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:38:12] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:38:12] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:38:12] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:38:12] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:38:12] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:38:12] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:38:12] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:38:12] [INFO] Email is existingadmin@test.com
[2022-6-12 11:38:12] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:38:12] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:38:12] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:38:12] [INFO] comparing password now!
[2022-6-12 11:38:12] [INFO] Here in the login controller #2!
[2022-6-12 11:40:21] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:40:21] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:40:21] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:40:21] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:40:21] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:40:54] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:40:54] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:40:54] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:40:54] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:40:54] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:40:54] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:40:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:40:54] [INFO] Email is existingadmin@test.com
[2022-6-12 11:40:54] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:40:54] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:40:54] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:40:54] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:40:54] [INFO] comparing password now!
[2022-6-12 11:40:54] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:40:54] [INFO] Here in the login controller #2!
[2022-6-12 11:41:12] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:41:12] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:41:12] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:41:12] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:41:12] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:53:33] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:53:33] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:53:33] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:53:33] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:53:33] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:53:43] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:53:43] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:53:43] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:53:43] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:53:43] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:53:43] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:53:43] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:53:43] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:53:43] [INFO] Email is existingadmin@test.com
[2022-6-12 11:53:43] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:53:43] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:53:43] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:53:43] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:53:43] [INFO] Here in the login controller #2!
[2022-6-12 11:53:43] [INFO] comparing password now!
[2022-6-12 11:54:32] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:54:32] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:54:32] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:54:32] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:54:32] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:54:32] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:54:32] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:54:32] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:54:32] [INFO] Email is existingadmin@test.com
[2022-6-12 11:54:32] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:54:32] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:54:32] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:54:32] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:54:32] [INFO] comparing password now!
[2022-6-12 11:54:32] [INFO] Here in the login controller #2!
[2022-6-12 11:54:54] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:54:54] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:54:54] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:54:54] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:54:54] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:57:4] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 11:57:4] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 11:57:4] [INFO] Booting the 'Views' middleware...
[2022-6-12 11:57:4] [INFO] Booting the 'Statics' middleware...
[2022-6-12 11:57:4] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 11:57:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 11:57:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:57:4] [INFO] New user logged existingadmin@test.com
[2022-6-12 11:57:4] [INFO] Email is existingadmin@test.com
[2022-6-12 11:57:4] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 11:57:4] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 11:57:4] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 11:57:4] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 11:57:4] [INFO] comparing password now!
[2022-6-12 11:57:4] [INFO] Here in the login controller #2!
[2022-6-12 12:7:40] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:7:40] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:7:40] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:7:40] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:7:40] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:7:40] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 12:7:40] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:7:40] [INFO] New user logged existingadmin@test.com
[2022-6-12 12:7:40] [INFO] Email is existingadmin@test.com
[2022-6-12 12:7:40] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 12:7:40] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 12:7:40] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:7:40] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 12:7:40] [INFO] comparing password now!
[2022-6-12 12:7:40] [INFO] Here in the login controller #2!
[2022-6-12 12:8:17] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:8:17] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:8:17] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:8:17] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:8:17] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:8:32] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:8:32] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:8:32] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:8:32] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:8:32] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:16:23] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:16:23] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:16:23] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:16:23] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:16:23] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:16:35] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:16:35] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:16:35] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:16:35] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:16:35] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:16:43] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:16:43] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:16:43] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:16:43] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:16:43] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:16:43] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 12:16:43] [INFO] New user logged existingadmin@test.com
[2022-6-12 12:16:43] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:16:43] [INFO] Email is existingadmin@test.com
[2022-6-12 12:16:43] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 12:16:43] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 12:16:43] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:16:43] [INFO] Here in the login controller #2!
[2022-6-12 12:16:43] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 12:16:43] [INFO] comparing password now!
[2022-6-12 12:26:48] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:26:48] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:26:48] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:26:48] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:26:48] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:30:27] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:30:27] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:30:27] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:30:27] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:30:27] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:30:27] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 12:30:27] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:30:27] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 12:30:27] [INFO] New user logged existingadmin@test.com
[2022-6-12 12:30:27] [INFO] Email is existingadmin@test.com
[2022-6-12 12:30:27] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 12:30:27] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:30:27] [INFO] comparing password now!
[2022-6-12 12:30:27] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 12:30:27] [INFO] Here in the login controller #2!
[2022-6-12 12:45:15] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:45:15] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:45:15] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:45:15] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:45:15] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:45:15] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 12:45:15] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:45:15] [INFO] New user logged existingadmin@test.com
[2022-6-12 12:45:15] [INFO] Email is existingadmin@test.com
[2022-6-12 12:45:15] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 12:45:15] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 12:45:15] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:45:15] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 12:45:15] [INFO] comparing password now!
[2022-6-12 12:45:15] [INFO] Here in the login controller #2!
[2022-6-12 12:45:15] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 12:45:15] [ERROR] sqlToDB() error: invalid input syntax for type integer: "{"id":4,"email":"existingadmin@test.com                                                                              ","phoneNumber":"8095445501                                        ","passwordResetToken":null,"passwordResetExpires":null,"fullname":"Angel Daniel Angeles                                                                                ","gender":"m                                                 ","profile":null,"userName":"existingAdmin                                                                                       "}" | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 12:45:15] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 12:45:15] [ERROR] sqlToDB() error: invalid input syntax for type integer: "{"id":4,"email":"existingadmin@test.com                                                                              ","phoneNumber":"8095445501                                        ","passwordResetToken":null,"passwordResetExpires":null,"fullname":"Angel Daniel Angeles                                                                                ","gender":"m                                                 ","profile":null,"userName":"existingAdmin                                                                                       "}" | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 12:45:15] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 12:45:15] [ERROR] sqlToDB() error: invalid input syntax for type integer: "{"id":4,"email":"existingadmin@test.com                                                                              ","phoneNumber":"8095445501                                        ","passwordResetToken":null,"passwordResetExpires":null,"fullname":"Angel Daniel Angeles                                                                                ","gender":"m                                                 ","profile":null,"userName":"existingAdmin                                                                                       "}" | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 12:46:1] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:46:1] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:46:1] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:46:1] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:46:1] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:46:1] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 12:46:1] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:46:1] [INFO] New user logged existingadmin@test.com
[2022-6-12 12:46:1] [INFO] Email is existingadmin@test.com
[2022-6-12 12:46:1] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 12:46:1] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 12:46:1] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:46:1] [INFO] comparing password now!
[2022-6-12 12:46:1] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 12:46:1] [INFO] Here in the login controller #2!
[2022-6-12 12:55:47] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:55:47] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:55:47] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:55:47] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:55:47] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:55:47] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 12:55:47] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:55:47] [INFO] New user logged existingadmin@test.com
[2022-6-12 12:55:47] [INFO] Email is existingadmin@test.com
[2022-6-12 12:55:47] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 12:55:47] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 12:55:47] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:55:47] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 12:55:47] [INFO] comparing password now!
[2022-6-12 12:55:47] [INFO] Here in the login controller #2!
[2022-6-12 12:56:27] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 12:56:27] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 12:56:27] [INFO] Booting the 'Views' middleware...
[2022-6-12 12:56:27] [INFO] Booting the 'Statics' middleware...
[2022-6-12 12:56:27] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 12:56:27] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 12:56:27] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:56:27] [INFO] New user logged existingadmin@test.com
[2022-6-12 12:56:27] [INFO] Email is existingadmin@test.com
[2022-6-12 12:56:27] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 12:56:27] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 12:56:27] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 12:56:27] [INFO] comparing password now!
[2022-6-12 12:56:27] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 12:56:27] [INFO] Here in the login controller #2!
[2022-6-12 13:2:18] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 13:2:18] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 13:2:18] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 13:2:18] [INFO] Booting the 'Views' middleware...
[2022-6-12 13:2:18] [INFO] Booting the 'Statics' middleware...
[2022-6-12 13:2:18] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 13:2:18] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:2:18] [INFO] New user logged existingadmin@test.com
[2022-6-12 13:2:18] [INFO] Email is existingadmin@test.com
[2022-6-12 13:2:18] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 13:2:18] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 13:2:18] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:2:18] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 13:2:18] [INFO] comparing password now!
[2022-6-12 13:2:18] [INFO] Here in the login controller #2!
[2022-6-12 13:3:16] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 13:3:16] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 13:3:16] [INFO] Booting the 'Views' middleware...
[2022-6-12 13:3:16] [INFO] Booting the 'Statics' middleware...
[2022-6-12 13:3:16] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 13:3:22] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 13:3:22] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 13:3:22] [INFO] Booting the 'Views' middleware...
[2022-6-12 13:3:22] [INFO] Booting the 'Statics' middleware...
[2022-6-12 13:3:22] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 13:4:9] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 13:4:9] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 13:4:9] [INFO] Booting the 'Views' middleware...
[2022-6-12 13:4:9] [INFO] Booting the 'Statics' middleware...
[2022-6-12 13:4:9] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 13:4:9] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 13:4:9] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:4:9] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 13:4:9] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 13:4:9] [INFO] New user logged existingadmin@test.com
[2022-6-12 13:4:9] [INFO] Email is existingadmin@test.com
[2022-6-12 13:4:9] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:4:9] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 13:4:9] [INFO] comparing password now!
[2022-6-12 13:4:9] [INFO] Here in the login controller #2!
[2022-6-12 13:4:9] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:4:9] [ERROR] sqlToDB() error: invalid input syntax for type integer: "{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImV4aXN0aW5nYWRtaW5AdGVzdC5jb20iLCJwYXNzd29yZCI6Ijc4Y2E4OWZiOTY5Nzc4ZTEwNDRjMDY2NTlmYjA3N2JkYjRiNzdkMWQ2YjBjMDQ2NmU1MzIzM2Q3MzM2MWEyODAiLCJkYXRlIjoxNjU1MDUzNDUwNTA0LCJpYXQiOjE2NTUwNTM0NTB9.LdmvsMM346prdpoZVmW_APIwXs_V9vb_ttn-3BmsW6E","user":{"id":4,"email":"existingadmin@test.com                                                                              ","phoneNumber":"8095445501                                        ","passwordResetToken":null,"passwordResetExpires":null,"fullname":"Angel Daniel Angeles                                                                                ","gender":"m                                                 ","profile":null,"userName":"existingAdmin                                                                                       "}}" | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:5:36] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 13:5:36] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 13:5:36] [INFO] Booting the 'Views' middleware...
[2022-6-12 13:5:36] [INFO] Booting the 'Statics' middleware...
[2022-6-12 13:5:36] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 13:5:36] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 13:5:36] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:5:36] [INFO] New user logged existingadmin@test.com
[2022-6-12 13:5:36] [INFO] Email is existingadmin@test.com
[2022-6-12 13:5:36] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 13:5:36] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 13:5:36] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:5:36] [INFO] comparing password now!
[2022-6-12 13:5:36] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 13:5:36] [INFO] Here in the login controller #2!
[2022-6-12 13:5:36] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:5:36] [ERROR] sqlToDB() error: invalid input syntax for type integer: "{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImV4aXN0aW5nYWRtaW5AdGVzdC5jb20iLCJwYXNzd29yZCI6Ijc4Y2E4OWZiOTY5Nzc4ZTEwNDRjMDY2NTlmYjA3N2JkYjRiNzdkMWQ2YjBjMDQ2NmU1MzIzM2Q3MzM2MWEyODAiLCJkYXRlIjoxNjU1MDUzNTQxNDQwLCJpYXQiOjE2NTUwNTM1NDF9.r-1kwrXiIbNUu0_9Mw49EeeqfQwaERJfDOdc0H0LZZY","user":{"id":4,"email":"existingadmin@test.com                                                                              ","phoneNumber":"8095445501                                        ","passwordResetToken":null,"passwordResetExpires":null,"fullname":"Angel Daniel Angeles                                                                                ","gender":"m                                                 ","profile":null,"userName":"existingAdmin                                                                                       "}}" | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:6:36] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 13:6:36] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 13:6:36] [INFO] Booting the 'Views' middleware...
[2022-6-12 13:6:36] [INFO] Booting the 'Statics' middleware...
[2022-6-12 13:6:36] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 13:6:36] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 13:6:36] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:6:36] [INFO] New user logged existingadmin@test.com
[2022-6-12 13:6:36] [INFO] Email is existingadmin@test.com
[2022-6-12 13:6:36] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 13:6:36] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 13:6:36] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:6:36] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 13:6:36] [INFO] comparing password now!
[2022-6-12 13:6:36] [INFO] Here in the login controller #2!
[2022-6-12 13:6:36] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:6:36] [ERROR] sqlToDB() error: invalid input syntax for type integer: "{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImV4aXN0aW5nYWRtaW5AdGVzdC5jb20iLCJwYXNzd29yZCI6Ijc4Y2E4OWZiOTY5Nzc4ZTEwNDRjMDY2NTlmYjA3N2JkYjRiNzdkMWQ2YjBjMDQ2NmU1MzIzM2Q3MzM2MWEyODAiLCJkYXRlIjoxNjU1MDUzNTk5OTc2LCJpYXQiOjE2NTUwNTM1OTl9.8w1jSrKfpsO366jhwiD-btjTMDpnqn5shBOAE4EDvto","user":{"id":4,"email":"existingadmin@test.com                                                                              ","phoneNumber":"8095445501                                        ","passwordResetToken":null,"passwordResetExpires":null,"fullname":"Angel Daniel Angeles                                                                                ","gender":"m                                                 ","profile":null,"userName":"existingAdmin                                                                                       "}}" | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:9:48] [INFO] Booting the 'HTTP' middleware...
[2022-6-12 13:9:48] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-12 13:9:48] [INFO] Booting the 'Views' middleware...
[2022-6-12 13:9:48] [INFO] Booting the 'Statics' middleware...
[2022-6-12 13:9:48] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-12 13:9:48] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-12 13:9:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:9:48] [INFO] New user logged existingadmin@test.com
[2022-6-12 13:9:48] [INFO] Email is existingadmin@test.com
[2022-6-12 13:9:48] [INFO] Password is 78ca89fb969778e1044c06659fb077bdb4b77d1d6b0c0466e53233d73361a280
[2022-6-12 13:9:48] [INFO] sqlToDB() name: fetch-user-by-email | sql: select * from public.users where email = $1 | data: undefined
[2022-6-12 13:9:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:9:48] [INFO] user is existingadmin@test.com                                                                              
[2022-6-12 13:9:48] [INFO] comparing password now!
[2022-6-12 13:9:48] [INFO] Here in the login controller #2!
[2022-6-12 13:9:48] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:9:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:9:48] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:9:48] [INFO] sqlToDB(): SELECT | 1
[2022-6-12 13:9:48] [INFO] sqlToDB() name: fetch-user-by-id | sql: select * from public.users where id = $1 | data: undefined
[2022-6-12 13:9:48] [INFO] sqlToDB(): SELECT | 1
